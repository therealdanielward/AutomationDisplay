<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MvcTricks.RoundTripModelBinding</name>
    </assembly>
    <members>
        <member name="T:MvcTricks.RoundTripModelBinding.Configuration">
            <summary>
            The default configuration.
            </summary>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvcTricks.RoundTripModelBinding.Configuration"/> class.
            </summary>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Configuration.#ctor(MvcTricks.RoundTripModelBinding.StorageModes)">
            <summary>
            Initializes a new instance of the <see cref="T:MvcTricks.RoundTripModelBinding.Configuration"/> class.
            </summary>
            <param name="storageMode">The storage mode.</param>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Configuration.#ctor(MvcTricks.RoundTripModelBinding.StorageModes,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:MvcTricks.RoundTripModelBinding.Configuration"/> class.
            </summary>
            <param name="storageMode">The storage mode.</param>
            <param name="encryptionKey">The encryption key.</param>
            <param name="encryptionIV">The encryption IV.</param>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Configuration.RegisterSerializationHandlerFor``1(System.Func{``0,System.String},System.Func{System.String,``0})">
            <summary>
            Registers a pair of delegates to handle serialization and deserialization for a specific type.
            </summary>
            <typeparam name="T">The handled type.</typeparam>
            <param name="serializer">Serialization method.</param>
            <param name="deserializer">Deserialization method.</param>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Configuration.RegisterSerializationHandlerFor``1(MvcTricks.RoundTripModelBinding.Serialization.ISerializationHandler{``0})">
            <summary>
            Registers a serialization handler, to handle serialization and deserialization for a specific type.
            </summary>
            <typeparam name="T">The handled type.</typeparam>
            <param name="handler">The handler.</param>
        </member>
        <member name="P:MvcTricks.RoundTripModelBinding.Configuration.EncryptionKey">
            <summary>
            Gets the encryption key. (Set this when using a web farm)
            </summary>
        </member>
        <member name="P:MvcTricks.RoundTripModelBinding.Configuration.EncryptionIV">
            <summary>
            Gets the encryption IV.  (Set this when using a web farm)
            </summary>
        </member>
        <member name="P:MvcTricks.RoundTripModelBinding.Configuration.StorageMode">
            <summary>
            Gets the storage mode for the model.
            </summary>
        </member>
        <member name="P:MvcTricks.RoundTripModelBinding.Configuration.Default">
            <summary>
            Gets or sets the default configuration.
            </summary>
            <value>
            The default configuration.
            </value>
        </member>
        <member name="T:System.Web.Mvc.ControllerExtensions">
            <summary>
            Controller extensions for handling serialized models, which are persisted between roundtrips.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ControllerExtensions.GetRoundTripModel``1(System.Web.Mvc.Controller)">
            <summary>
            Deserializes a model persisted between roundtrips. 
            Posted values are not merged with the model values.
            </summary>
            <typeparam name="T">The type of the model.</typeparam>
            <param name="controller">The controller.</param>
            <returns>Returns an instance of the model, containing the persisted values.</returns>
        </member>
        <member name="M:System.Web.Mvc.ControllerExtensions.GetRoundTripModel``1(System.Web.Mvc.Controller,System.String)">
            <summary>
            Deserializes a model persisted between roundtrips.
            Posted values are not merged with the model values.
            </summary>
            <typeparam name="T">The type of the model.</typeparam>
            <param name="controller">The controller.</param>
            <param name="key">The target key for the data. (For special cases with multiple instances)</param>
            <returns>
            Returns an instance of the model, containing the persisted values.
            </returns>
        </member>
        <member name="P:MvcTricks.RoundTripModelBinding.Controls.FormWrapper.Form">
            <summary>
            Gets the wrapped form.
            </summary>
        </member>
        <member name="T:MvcTricks.RoundTripModelBinding.DefaultModelBinder">
            <summary>
            Modelbinder for deserializing a model persisted between roundtrips.  (Inherits <see cref="T:System.Web.Mvc.DefaultModelBinder"/>) 
            The model is merged with posted values.
            </summary>
        </member>
        <member name="T:MvcTricks.RoundTripModelBinding.RoundTripModelBinder">
            <summary>
            Modelbinder for deserializing a model persisted between roundtrips. (Inherrits <see cref="T:System.Web.Mvc.DefaultModelBinder"/>) 
            The model is merged with posted values.
            </summary>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.RoundTripModelBinder.#ctor">
            <summary>
            Modelbinder for deserializing a model persisted between roundtrips. (Inherrits <see cref="T:System.Web.Mvc.DefaultModelBinder"/>) 
            The model is merged with posted values.
            </summary>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.RoundTripModelBinder.#ctor(System.String)">
            <summary>
            Modelbinder for deserializing a model persisted between roundtrips.  (Inherrits <see cref="T:System.Web.Mvc.DefaultModelBinder"/>) 
            The model is merged with posted values.
            (Used from within the attribute)
            </summary>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.RoundTripModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
            <summary>
            Creates the specified model type by using the specified controller context and binding context.
            If a serialized model is found in the post collecion, it will be used to create the model.
            </summary>
            <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
            <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
            <param name="modelType">The type of the model object to return.</param>
            <returns>A data object of the specified type.</returns>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.DefaultModelBinder.#ctor">
            <summary>
            Default Modelbinder for deserializing a model persisted between roundtrips. (Inherits <see cref="T:System.Web.Mvc.DefaultModelBinder"/>) 
            The model is merged with posted values, using the default configuration.
            </summary>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.DefaultModelBinder.#ctor(MvcTricks.RoundTripModelBinding.Configuration)">
            <summary>
            Default Modelbinder for deserializing a model persisted between roundtrips.  (Inherits <see cref="T:System.Web.Mvc.DefaultModelBinder"/>)
            The model is merged with posted values, using the provided configuration.
            </summary>
            <param name="configuration">The configuration to use.</param>
        </member>
        <member name="T:System.Web.Mvc.MvcFormExtensions">
            <summary>
            MvcFormExtensions extensions for serializing models, which persists data between roundtrips.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.MvcFormExtensions.AppendRoundTripModel(System.Web.Mvc.Html.MvcForm,System.Web.Mvc.ViewContext)">
            <summary>
            Extends a <see cref="T:System.Web.Mvc.Html.MvcForm"/>, and appends a serialized model to the generated form.
            </summary>
            <param name="form">The form.</param>
            <param name="viewContext">The view context.</param>
            <returns>Returns the form.</returns>
        </member>
        <member name="M:System.Web.Mvc.MvcFormExtensions.AppendRoundTripModel(System.Web.Mvc.Html.MvcForm,System.Web.Mvc.ViewContext,MvcTricks.RoundTripModelBinding.StorageModes)">
            <summary>
            Extends a <see cref="T:System.Web.Mvc.Html.MvcForm"/>, and appends a serialized model to the generated form.
            </summary>
            <param name="form">The form.</param>
            <param name="viewContext">The view context.</param>
            <param name="mode">The mode.</param>
            <returns>
            Returns the form.
            </returns>
        </member>
        <member name="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute">
            <summary>
            Deserializes a model persisted between roundtrips. 
            The model is merged with posted values.
            </summary>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute.#ctor">
            <summary>
            Deserializes a model persisted between roundtrips. 
            The model is merged with posted values.
            </summary>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute.#ctor(System.String)">
            <summary>
            Deserializes a model persisted between roundtrips. 
            The model is merged with posted values.
            </summary>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute.GetBinder">
            <summary>
            Retrieves the associated model binder.
            </summary>
            <returns>
            A reference to an object that implements the <see cref="T:System.Web.Mvc.IModelBinder"/> interface.
            </returns>
        </member>
        <member name="T:MvcTricks.RoundTripModelBinding.StorageModes">
            <summary>
            Storage modes for the model.
            </summary>
        </member>
        <member name="F:MvcTricks.RoundTripModelBinding.StorageModes.Store">
            <summary>
            Stored only, bigger output, but fastest.
            </summary>
        </member>
        <member name="F:MvcTricks.RoundTripModelBinding.StorageModes.Compress">
            <summary>
            Copressed output.
            </summary>
        </member>
        <member name="F:MvcTricks.RoundTripModelBinding.StorageModes.CompressAndEncrypt">
            <summary>
            Compressed and encrypted output.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.HtmlHelperExtensions">
            <summary>
            HtmlHelper extensions for serializing models, which persists data between roundtrips.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelperExtensions.RoundTripModel``1(System.Web.Mvc.HtmlHelper{``0})">
            <summary>
            Serialize the model for persisting between roundtrips.
            Use either a <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> on the model parameter posted to a controller action, or on of the controller extensions, to get the data back.
            The <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> merges the original model with the posted values, so it is ready for use.
            The controller extensions gets an object with the original data, and does not merge with posted values.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="htmlHelper">The HtmlHelper.</param>
            <returns>
            Returns a <see cref="T:System.Web.Mvc.MvcHtmlString"/> containing a hidden input field.
            </returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelperExtensions.RoundTripModel``1(System.Web.Mvc.HtmlHelper{``0},MvcTricks.RoundTripModelBinding.StorageModes)">
            <summary>
            Serialize the model for persisting between roundtrips.
            Use either a <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> on the model parameter posted to a controller action, or on of the controller extensions, to get the data back.
            The <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> merges the original model with the posted values, so it is ready for use.
            The controller extensions gets an object with the original data, and does not merge with posted values.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="htmlHelper">The HtmlHelper.</param>
            <param name="mode">The storage mode.</param>
            <returns>
            Returns a <see cref="T:System.Web.Mvc.MvcHtmlString"/> containing a hidden input field.
            </returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelperExtensions.RoundTripModelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Serialize the model for persisting between roundtrips. 
            Use either a <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> on the model parameter posted to a controller action, or on of the controller extensions, to get the data back.
            The <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> merges the original model with the posted values, so it is ready for use. 
            The controller extensions gets an object with the original data, and does not merge with posted values.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="htmlHelper">The HtmlHelper.</param>
            <param name="expression">The expression.</param>
            <returns>Returns a <see cref="T:System.Web.Mvc.MvcHtmlString"/> containing a hidden input field.</returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelperExtensions.RoundTripModelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},MvcTricks.RoundTripModelBinding.StorageModes)">
            <summary>
            Serialize the model for persisting between roundtrips.
            Use either a <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> on the model parameter posted to a controller action, or on of the controller extensions, to get the data back.
            The <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> merges the original model with the posted values, so it is ready for use.
            The controller extensions gets an object with the original data, and does not merge with posted values.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="htmlHelper">The HtmlHelper.</param>
            <param name="expression">The expression.</param>
            <param name="mode">The storage mode.</param>
            <returns>
            Returns a <see cref="T:System.Web.Mvc.MvcHtmlString"/> containing a hidden input field.
            </returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelperExtensions.RoundTripModelFor(System.Web.Mvc.HtmlHelper,System.Object)">
            <summary>
            Serialize the model for persisting between roundtrips. 
            Use either a <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> on the model parameter posted to a controller action, or on of the controller extensions, to get the data back.
            The <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> merges the original model with the posted values, so it is ready for use. 
            The controller extensions gets an object with the original data, and does not merge with posted values.
            </summary>
            <param name="htmlHelper">The HtmlHelper.</param>
            <param name="model">The model to serialize.</param>
            <returns>Returns a <see cref="T:System.Web.Mvc.MvcHtmlString"/> containing a hidden input field.</returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelperExtensions.RoundTripModelFor(System.Web.Mvc.HtmlHelper,System.Object,MvcTricks.RoundTripModelBinding.StorageModes)">
            <summary>
            Serialize the model for persisting between roundtrips.
            Use either a <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> on the model parameter posted to a controller action, or on of the controller extensions, to get the data back.
            The <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> merges the original model with the posted values, so it is ready for use.
            The controller extensions gets an object with the original data, and does not merge with posted values.
            </summary>
            <param name="htmlHelper">The HtmlHelper.</param>
            <param name="model">The model to serialize.</param>
            <param name="mode">The storage mode.</param>
            <returns>
            Returns a <see cref="T:System.Web.Mvc.MvcHtmlString"/> containing a hidden input field.
            </returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelperExtensions.RoundTripModelFor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Serialize the model for persisting between roundtrips.
            Use either a <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> on the model parameter posted to a controller action, or on of the controller extensions, to get the data back.
            The <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> merges the original model with the posted values, so it is ready for use.
            The controller extensions gets an object with the original data, and does not merge with posted values.
            </summary>
            <param name="htmlHelper">The HTML.</param>
            <param name="key">The target key for the data. (For special cases with multiple instances)</param>
            <param name="model">The model to serialize.</param>
            <returns>Returns a <see cref="T:System.Web.Mvc.MvcHtmlString"/> containing a hidden input field.</returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelperExtensions.RoundTripModelFor(System.Web.Mvc.HtmlHelper,System.String,System.Object,MvcTricks.RoundTripModelBinding.StorageModes)">
            <summary>
            Serialize the model for persisting between roundtrips.
            Use either a <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> on the model parameter posted to a controller action, or on of the controller extensions, to get the data back.
            The <see cref="T:MvcTricks.RoundTripModelBinding.RoundTripModelAttribute"/> merges the original model with the posted values, so it is ready for use.
            The controller extensions gets an object with the original data, and does not merge with posted values.
            </summary>
            <param name="htmlHelper">The HTML.</param>
            <param name="key">The target key for the data. (For special cases with multiple instances)</param>
            <param name="model">The model to serialize.</param>
            <param name="mode">The storage mode.</param>
            <returns>
            Returns a <see cref="T:System.Web.Mvc.MvcHtmlString"/> containing a hidden input field.
            </returns>
        </member>
        <member name="T:MvcTricks.RoundTripModelBinding.Serialization.ISerializationHandler`1">
            <summary>
            Serialization handling interface.
            </summary>
            <typeparam name="T">The handled type.</typeparam>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Serialization.ISerializationHandler`1.Serialize(`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="value">The value to serialize.</param>
            <returns>Returns a string.</returns>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Serialization.ISerializationHandler`1.Deserialize(System.String)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="value">The value to deserialize.</param>
            <returns>Returns an instance of the handled type.</returns>
        </member>
        <member name="T:MvcTricks.RoundTripModelBinding.Serialization.ModelData">
            <summary>
            Handles serializing, deserializing model data.
            </summary>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Serialization.ModelData.Serialize(System.Object)">
            <summary>
            Serialize the model for persisting between roundtrips.
            </summary>
            <param name="model">The model.</param>
            <returns>Returns a string with the serialized data.</returns>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Serialization.ModelData.Serialize(System.Object,MvcTricks.RoundTripModelBinding.StorageModes)">
            <summary>
            Serialize the model for persisting between roundtrips.
            </summary>
            <param name="model">The model.</param>
            <param name="mode">The storage mode.</param>
            <returns>
            Returns a string with the serialized data.
            </returns>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Serialization.ModelData.Deserialize``1(System.Web.HttpRequestBase)">
            <summary>
            Deserialize the model persisted in the request collection.
            </summary>
            <typeparam name="T">The model type.</typeparam>
            <param name="request">The request.</param>
            <returns>Returns the model.</returns>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Serialization.ModelData.Deserialize``1(System.Web.HttpRequestBase,System.String)">
            <summary>
            Deserialize the model persisted in the request collection.
            </summary>
            <typeparam name="T">The model type.</typeparam>
            <param name="request">The request.</param>
            <param name="key">The key wich stores the data in the request collection.</param>
            <returns>Returns the model.</returns>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Serialization.ModelData.Deserialize``1(System.String)">
            <summary>
            Deserialize the model.
            </summary>
            <typeparam name="T">The model type.</typeparam>
            <param name="serialized">The serialized data.</param>
            <returns>Returns the model.</returns>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Serialization.ModelData.Deserialize(System.Type,System.Web.HttpRequestBase)">
            <summary>
            Deserialize the model persisted in the request collection.
            </summary>
            <param name="modelType">Type of the model.</param>
            <param name="request">The request.</param>
            <returns>Returns the model.</returns>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Serialization.ModelData.Deserialize(System.Type,System.Web.HttpRequestBase,System.String)">
            <summary>
            Deserialize the model persisted in the request collection.
            </summary>
            <param name="modelType">Type of the model.</param>
            <param name="request">The request.</param>
            <param name="key">The key wich stores the data in the request collection.</param>
            <returns>Returns the model.</returns>
        </member>
        <member name="M:MvcTricks.RoundTripModelBinding.Serialization.ModelData.Deserialize(System.Type,System.String)">
            <summary>
            Deserialize the model.
            </summary>
            <param name="modelType">Type of the model.</param>
            <param name="serialized">The serialized data.</param>
            <returns>Returns the model.</returns>
        </member>
    </members>
</doc>
